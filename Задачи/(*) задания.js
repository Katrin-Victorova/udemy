/* -----------------------------------------------------------------------
Заполните новый массив(result) числами из старого(arr).
Количество элементов в массиве можно получить как 
arr.length, а к элементам обращаемся все так же: arr[0], arr[1] и тд.
Должен получиться точно такой же массив
*/

/*
Чтобы заполнить новый массив result числами из старого массива arr, 
можно использовать цикл for, который будет проходить по всем 
элементам массива arr и добавлять их в result.Вот как это можно сделать:
*/

// Место для первой задачи
function firstTask() {
	// Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
	const arr = [3, 5, 8, 16, 20, 23, 50];
	const result = [];

	for (let i = 0; i < arr.length; i++) {
		result[i] = arr[i];
	}
	// Не трогаем
	return result;
}
firstTask();

/*
В этом коде мы используем цикл for, чтобы пройти 
по всем индексам массива arr от 0 до arr.length - 1. 
На каждой итерации мы присваиваем элемент из arr в соответствующий индекс 
массива result. В конце функция возвращает новый массив 
result, который будет содержать те же значения, что и arr.
*/

/* -----------------------------------------------------------------------
Измените данный массив так, чтобы все числа были увеличены в 2 раза, 
а если попадается строка строка - то к ней было добавлено " - done".
Для определения типа данных используйте typeof();
Должно получиться: [ 10, 20, 'Shopping - done', 40, 'Homework - done' ]
*/

function secondTask() {
	// Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
	const data = [5, 10, 'Shopping', 20, 'Homework'];

	for (let i = 0; i < data.length; i++) {
		// проходимся по эл массива
		if (typeof data[i] === 'number') {
			// проверка типа
			data[i] = data[i] * 2;
		} else if (typeof data[i] === 'string') {
			data[i] = `${data[i]} - done`;
		}
	}

	console.log(data); //Вывод результата
	return data; //Возврат результата
}

secondTask();

/* -----------------------------------------------------------------------
Разверните массив data наоборот при помощи цикла 
и запишите данные в массив result.
Должно получиться: [ 'Homework', 20, 'Shopping', 10, 5 ]
*/

function thirdTask() {
	// Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
	const data = [5, 10, 'Shopping', 20, 'Homework'];
	const result = [];

	for (let i = 1; i <= data.length; i++) {
		result[i - 1] = data[data.length - i];
	}

	console.log(result); // [ 'Homework', 20, 'Shopping', 10, 5 ]
	return result;
}

thirdTask();

/* -----------------------------------------------------------------------
(**) Задача на формирование фигуры
Это одна из классических задач в программировании на формирование самых разных фигур при помощи кода. Вы спросите, а зачем это вообще нужно? Ответов несколько:

Иногда можно встретить просто нереальные вещи, построенные только при помощи кода. Но мы с вами займемся базовой фигурой. Сейчас вам необходимо написать код, который при помощи звездочек (*) в консоли нарисует вот такую фигуру:

     *
    ***
   *****
  *******
 *********
***********
*/

const lines = 5;
let result = '';

for (let i = 0; i <= lines; i++) {
	for (let j = 0; j < lines - i; j++) {
		result += ' ';
	}
	for (let j = 0; j < 2 * i + 1; j++) {
		result += '*';
	}
	result += '\n';
}

console.log(result);
